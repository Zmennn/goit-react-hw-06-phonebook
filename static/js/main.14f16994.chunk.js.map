{"version":3,"sources":["components/ContactsList.module.css","redux/actions.js","components/ContactsList.jsx","components/ContactForm.jsx","components/Filter.jsx","App.js","redux/reducers.js","redux/store.js","index.js"],"names":["module","exports","deleteRecord","createAction","changeFilter","submitRecord","ContactsList","contacts","useSelector","state","filter","dispatch","useDispatch","handleDelete","ev","id","target","className","style","list","el","arr","name","toLowerCase","split","i","length","match","RegExp","map","listItem","number","type","deleteButton","onClick","connect","add","data","inputNameId","uuidv4","inputNumberId","useState","setName","setNumber","handleChangeAllInput","value","form","onSubmit","e","preventDefault","label","htmlFor","input","pattern","title","required","onChange","button","filterData","autoComplete","App","reducer","createReducer","action","find","payload","alert","localStorage","setItem","JSON","stringify","elem","middleware","getDefaultMiddleware","logger","preloadState","getItem","parse","initData","store","configureStore","devTools","process","preloadedState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.14f16994.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactsList_form__2qg-j\",\"input\":\"ContactsList_input__1hk-M\",\"label\":\"ContactsList_label__2GunK\",\"button\":\"ContactsList_button__3Cli1\",\"list\":\"ContactsList_list__1EXkT\",\"listItem\":\"ContactsList_listItem__1DhIF\",\"deleteButton\":\"ContactsList_deleteButton__2LusI\"};","import { createAction } from '@reduxjs/toolkit';\n\n// export const deleteRecord = value => ({\n\n//     type: \"deleteRecord\",\n//     payload: value\n// });\n\n// export const changeFilter = value => ({\n//     type: \"changeFilter\",\n//     payload: value\n// });\n\n// export const submitRecord = value => ({\n//     type: \"submitRecord\",\n//     payload: value\n// });\n\nexport const deleteRecord = createAction('deleteRecord');\nexport const changeFilter = createAction('changeFilter');\nexport const submitRecord = createAction('submitRecord');\n","import React, { } from 'react';\r\nimport style from './ContactsList.module.css';\r\n// import PropTypes from \"prop-types\";\r\nimport {  useDispatch, useSelector } from 'react-redux';\r\nimport { deleteRecord } from '../redux/actions';\r\n\r\n\r\n\r\n\r\nfunction ContactsList() {\r\n    const contacts = useSelector(state => state.contacts);\r\n    const filter = useSelector(state => state.filter);\r\n    const dispatch = useDispatch();\r\n    const del = id => dispatch(deleteRecord(id));\r\n\r\n    const handleDelete = (ev) => { del(ev.target.id) };\r\n\r\n    const filteredContacts = () => {\r\n    return contacts.filter(el => {\r\n      const arr = el.name.toLowerCase().split(' ');\r\n      for (let i = 0; i < arr.length; i++) {\r\n        if (arr[i].toLowerCase().match(new RegExp(`^${filter}`)) !== null) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    });\r\n    };\r\n    \r\n        return (\r\n            <ul className={style.list}>        \r\n                {\r\n                    filteredContacts().map(el => (<li\r\n                        className={style.listItem}\r\n                        key={el.id} >\r\n                        {el.name}:  {el.number}\r\n                        <button\r\n                            type=\"button\"\r\n                            className={style.deleteButton}\r\n                            id={el.id}\r\n                            onClick={handleDelete}\r\n                        >Delete</button>\r\n                      </li>))\r\n                }\r\n        </ul>\r\n    )\r\n};\r\n\r\n// const stateToProps = state => {\r\n//     return {\r\n//         contacts: state?.contacts ?? [],\r\n//         filter:state?.filter??\"\"\r\n//     }\r\n// // };\r\n// const dispatchProps = dispatch => ({\r\n//     del: id => dispatch(deleteRecord(id))\r\n// });\r\n\r\nexport default ContactsList\r\n// export default connect(stateToProps,dispatchProps)(ContactsList);\r\n\r\n// ContactsList.propTypes = {\r\n//     contacts: PropTypes.array.isRequired,\r\n//     del: PropTypes.func.isRequired   \r\n// };\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport style from './ContactsList.module.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { connect } from 'react-redux';\r\nimport { submitRecord } from '../redux/actions';\r\n\r\n\r\n\r\n\r\n\r\nfunction ContactForm({ add }) {\r\n const inputNameId = uuidv4();\r\n  const inputNumberId = uuidv4();\r\n  \r\n  const [name,setName] = useState(\"\");\r\n  const [number,setNumber] = useState(\"\");\r\n\r\n  const handleChangeAllInput = (ev) => {\r\n       \r\n    if (ev.target.name === \"name\") {\r\n      setName(ev.target.value)\r\n    } else if (ev.target.name === \"number\") {\r\n      setNumber(ev.target.value)\r\n    };\r\n  };\r\n\r\n  return (<>\r\n      <form className={style.form} onSubmit={(e) => {\r\n        e.preventDefault();\r\n        add([name,number]);       \r\n        setName(\"\");\r\n        setNumber(\"\")  \r\n      }}>\r\n        <label className={style.label} htmlFor={inputNameId}>Name</label>\r\n        <input\r\n          className={style.input}\r\n          id={inputNameId}\r\n          value={name}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleChangeAllInput}\r\n            />\r\n            \r\n        <label className={style.label} htmlFor={inputNumberId}>Phone</label>\r\n        <input\r\n          className={style.input}\r\n          id={inputNumberId}\r\n          value={number}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleChangeAllInput}\r\n        />\r\n\r\n        <button className={style.button}\r\n          type=\"submit\"\r\n        >Add contact</button>\r\n      </form>\r\n    </>)\r\n};\r\n\r\n\r\n\r\nconst dispatchProps = dispatch => ({\r\n  add: data => dispatch(submitRecord(data))\r\n});\r\n\r\nexport default connect(null,dispatchProps)(ContactForm);\r\n\r\n\r\nContactForm.propTypes = {\r\n    add: PropTypes.func.isRequired\r\n}","import style from './ContactsList.module.css';\r\nimport React, {  } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from 'react-redux';\r\nimport {changeFilter} from '../redux/actions'\r\n\r\n\r\n function Filter({filterData}) {\r\n     return (<>\r\n            <label htmlFor=\"find\">Find contacts by name</label>\r\n            <input\r\n                className={style.input}\r\n                autoComplete=\"off\"\r\n                id=\"find\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]\"\r\n                onChange={filterData}\r\n                ></input>\r\n     </>   )\r\n};\r\n\r\nconst dispatchProps = dispatch => ({\r\n     filterData:ev=>dispatch(changeFilter(ev.target.value.toLowerCase()))\r\n})\r\n\r\nexport default connect(null,dispatchProps)(Filter)\r\nFilter.propTypes = {\r\n    filterData: PropTypes.func.isRequired\r\n}","import './App.css';\n\nimport ContactsList from './components/ContactsList.jsx';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter.jsx';\n\nexport default function App() {\n  return (\n    <>\n      <div>\n        <h1>Phonebook</h1>\n\n        <ContactForm />\n\n        <h2>Contacts</h2>\n\n        <Filter />\n\n        <ContactsList />\n      </div>\n    </>\n  );\n}\n","import { v4 as uuidv4 } from 'uuid';\n// import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { submitRecord, changeFilter, deleteRecord } from './actions';\n\nfunction delRecord(state = {}, action) {\n  const data = state.contacts.filter(elem => elem.id !== action.payload);\n  localStorage.setItem('contacts', JSON.stringify(data));\n  return { ...state, contacts: data };\n}\n\nfunction addRecord(state = {}, action) {\n  if (!state.contacts.find(el => el.name === action.payload[0])) {\n    const data = [\n      ...state.contacts,\n      { name: action.payload[0], number: action.payload[1], id: uuidv4() },\n    ];\n    localStorage.setItem('contacts', JSON.stringify(data));\n    return { ...state, contacts: data };\n  } else {\n    alert(`${action.payload[0]} is already in contacts`);\n    return state;\n  }\n}\n\nfunction filterRecord(state = {}, action) {\n  return { ...state, filter: action.payload };\n}\n\nexport const reducer = createReducer(\n  {},\n  {\n    [submitRecord]: addRecord,\n    [changeFilter]: filterRecord,\n    [deleteRecord]: delRecord,\n  },\n);\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n// import { createStore } from 'redux';\n// import combineReducers from './reducers';\nimport { reducer } from './reducers';\nimport logger from 'redux-logger';\n\nconst middleware = [...getDefaultMiddleware(), logger];\n\nconst initData = () => {\n  const data = localStorage.getItem('contacts');\n  if (data) {\n    return JSON.parse(data);\n  } else {\n    return [];\n  }\n};\n\nconst preloadState = {\n  contacts: initData(),\n  filter: '',\n};\n\n\nconst store = configureStore({\n  reducer: reducer,\n  middleware: middleware,\n  devTools: process.env.NODE_ENV === 'development',\n  preloadedState: preloadState,\n});\n\n// const store = createStore(\n//   reducer,\n//   preloadState,\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n// );\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}